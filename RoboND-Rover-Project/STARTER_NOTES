To run this when you're looking at like like months from now:

1. ~/.bashrc 'rr' to enable (source activate) a Conda environment for RoboND (sourcing from miniconda3/envs/RoboND)

   (make sure this is done on every terminal being used) ...
   as a check, which python should give /home/anupam/miniconda3/envs/RoboND/bin/python

2. Run simulator : cd roversim; ./Roversim.x64_64 .. choose a good resolution and I have to use Autonomous Mode ... launch.
3. python drive_rover.py - this should connect to the simulator, and the code starts executing, the mars rover starts driving in autonomous mode, collecting rocks, etc.

-------------------------------------------------------
-------------------------------------------------------

TO SET UP THE ENVIRONMENT:

Configure and Manage Your Environment with Anaconda
Per the Anaconda docs:

Conda is an open source package management system and environment management system for installing multiple versions of software packages and their dependencies and switching easily between them. It works on Linux, OS X and Windows, and was created for Python programs but can package and distribute any software.

Overview
Using Anaconda consists of the following:

Install miniconda on your computer
Create a new conda environment using this project
Each time you wish to work, activate your conda environment
Installation
Download the version of miniconda that matches your system. Make sure you download the version for Python 3.5.

NOTE: There have been reports of issues creating an environment using miniconda v4.3.13. If it gives you issues try versions 4.3.11 or 4.2.12 from here.

Linux	Mac	Windows
64-bit	64-bit (bash installer)	64-bit (bash installer)	64-bit (exe installer)
32-bit	32-bit (bash installer)		32-bit (exe installer)
Install miniconda on your machine. Detailed instructions:

Linux: http://conda.pydata.org/docs/install/quick.html#linux-miniconda-install (Linux users please also see this warning about how to resolve potential conflicts between the different Python versions installed via Anaconda and ROS.
Mac: http://conda.pydata.org/docs/install/quick.html#os-x-miniconda-install (Mac users please see this thread for possible issues with Jupyter if you have recently updated OSX)
Windows: http://conda.pydata.org/docs/install/quick.html#windows-miniconda-install
Setup your RoboND environment.

git clone https://github.com/udacity/RoboND-Python-StarterKit.git  
cd RoboND-Python-StarterKit
If you are on Windows, rename
meta_windows_patch.yml to
meta.yml

Create RoboND. Running this command will create a new conda environment that is provisioned with all libraries you need to be successful in this program.
NOTE: if you get an error when you try to run this command that conda doesn't exist, try closing and re-opening your terminal window.

conda env create -f environment.yml
NOTE: If the above command fails due to internet issues or timed out HTTP request then remove the partially built environment using the following command (then run the above create command again):

conda env remove -n RoboND
conda env create -f environment.yml
Verify that the RoboND environment was created in your environments:

conda info --envs
Cleanup downloaded libraries (remove tarballs, zip files, etc):

conda clean -tp
Using Anaconda
Now that you have created an environment, in order to use it, you will need to activate the environment. This must be done each time you begin a new working session i.e. open a new terminal window.

Activate the RoboND environment:

OS X and Linux
$ source activate RoboND
Windows
Depending on shell either:

$ source activate RoboND
or

$ activate RoboND
That's it. Now all of the RoboND libraries are available to you.

However, If you are a Linux user with ROS installed (or planning to install ROS natively on your system) please see this warning about how to resolve potential conflicts between the different Python versions installed via Anaconda and ROS.
To exit the environment when you have completed your work session, simply close the terminal window.

Uninstalling
If you ever want to delete or remove an environment

To delete/remove the "RoboND" environment:

conda env remove -n RoboND

----------------------------------

TO DO:

* Increase probabilty of picking up rocks. (i.e. create conditions such that telenan[near_sample] is more true than not.
* Find a faster way to scan the entire area (right now based on left hugging, but add more optimizations)
* Return back to the starting spot once finished
* Apply more path planning / control logic, or test out an algorithm if possible, given the telemetry data coming from the simulator
* Do not repeat a travelled area (detect if the path has already been travelled)
* Find a way to Map Out the travelling rover so it can be seen on the world map
* Apply RL if possible to improve / optimize the travel
* Apply better steering control and maneuvers / improve the decision states
* Avoid going into obstacles !! (specially if you can detect them in the camera image..!) 
 
 
--------------------------------

Rock Collection - Problems encountered:

1. Rock detection may not always be accurate in perception (false positives and false negatives) - and these distored sense of reality once a rock is discovered (or they miss a rock)

2. Mean rock values are negative (like Y) but rover Y is positive - so use abs in mean

3. Rover may go to stop mode upon an immediate obstacle seen between a close rock and path (like rock is along wall hugging way). That causes a force steer in stop mode and that 'crazy' mode in Rover ..

4. steer_iter gets stuck sometimes (meaning either rock is undiscovered while reality thread is high (incorrect) or the ACTION condition goes to false when it shouldn't. (Also probably need to reduce steer iter 10 to a lower value)

5. Brake = brake_set is correct? Also add throttle to zero.

6. 


