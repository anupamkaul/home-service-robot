From the udacity class:

sudo apt-get install ros-kinetic-navigation
sudo apt-get install ros-kinetic-map-server
sudo apt-get install ros-kinetic-move-base
sudo apt-get install ros-kinetic-amcl

---

Install task2's myrobot piece that launches the world with the robot inside
(copy myrobot to src, catkin_make and launch it..)

---

we will use pgm_map_creator (https://github.com/udacity/pgm_map_creator) for our map

from its readme:

pgm_map_creator
Create pgm map from Gazebo world file for ROS localization

Environment
Tested on Ubuntu 16.04, ROS Kinetic, Boost 1.58

Usage
Add the package to your workspace
Create a catkin workspace
Clone the package to the src folder
catkin_make and source devel/setup.bash
Add the map and insert the plugin
Add your world file to world folder
Add this line at the end of the world file, before </world> tag: <plugin filename="libcollision_map_creator.so" name="collision_map_creator"/>
Create the pgm map file
Open a terminal, run gzerver with the map file gzserver src/pgm_map_creator/world/<map file>
Open another terminal, launch the request_publisher node roslaunch pgm_map_creator request_publisher.launch
Wait for the plugin to generate map. It will be located in the map folder
Map Properties
Currently, please update the argument value in launch/request_publisher.launch file.

The file formap for this map generator is described here : https://en.wikipedia.org/wiki/Netpbm_format

---

From the class:

PGM Map Creator
Install Dependencies
We need libignition-math2-dev and protobuf-compiler to compile the map creator:

sudo apt-get install libignition-math2-dev protobuf-compiler

Clone the Repository
Clone the package pgm_map_creator to your src folder.

cd /home/workspace/catkin_ws/src/
git clone https://github.com/udacity/pgm_map_creator.git
Build the package:

cd ..
catkin_make
Add and Edit the World File
Copy the Gazebo world you created to the world folder

cp <YOUR GAZEBO WORLD FILE> src/pgm_map_creator/world/<YOUR GAZEBO WORLD FILE>
Insert the map creator plugin to your map file. Open the map file using the editor of your choice. Add the following tag towards the end of the file, but just before </world> tag:

<plugin filename="libcollision_map_creator.so" name="collision_map_creator"/>
Create the PGM Map!
Open a terminal, run gzerver with the map file:

gzserver src/pgm_map_creator/world/<YOUR GAZEBO WORLD FILE>
Open another terminal, launch the request_publisher node

roslaunch pgm_map_creator request_publisher.launch
Wait for the plugin to generate map. It will be located in the map folder of the pgm_map_creator! Open it to do a quick check of the map. If the map is cropped, you might want to adjust the parameters in launch/request_publisher.launch, namely the x and y values, which defines the size of the map:

  <arg name="xmin" default="-15" />
  <arg name="xmax" default="15" />
  <arg name="ymin" default="-15" />
  <arg name="ymax" default="15" />
  <arg name="scan_height" default="5" />
  <arg name="resolution" default="0.01" />
Edit the Map
Remember, the map is an image, which means you could edit it using image processing softwares like gimp in Linux. If you have found the map not accurate due to the models, feel free to edit the pgm file directly!

Add the Map to Your Package
Now we have the map file, let us move it to where it is needed! That is the maps folder you created at the very beginning.

cd /home/workspace/catkin_ws/
cp src/pgm_map_creator/maps/<YOUR MAP NAME>  src/<YOUR PACKAGE NAME>/maps/<YOUR MAP NAME>
You would also need a yaml file providing the metadata about the map. Create a yaml file next to your map:

cd src/<YOUR PACKAGE NAME>/src/maps
touch <YOUR MAP NAME>.yaml
Open the yaml file and add the following lines to it:

image: <YOUR MAP NAME>
resolution: 0.01
origin: [-15.0, -15.0, 0.0]
occupied_thresh: 0.65
free_thresh: 0.196
negate: 0
Note that the origin of the map should correspond to your map's size. For example, the default map size is 30 by 30, so the origin will be [-15, -15, 0], i.e. half the size of the map.


----










